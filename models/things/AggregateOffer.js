var mongoose = require('mongoose');
var Schema = mongoose.Schema;
var schema = new Schema({ offerCount: { type: Schema.Types.ObjectId, ref: 'offerCount' },
  lowPrice: { type: Schema.Types.ObjectId, ref: 'lowPrice' },
  highPrice: { type: Schema.Types.ObjectId, ref: 'highPrice' },
  warranty: { type: Schema.Types.ObjectId, ref: 'warranty' },
  validThrough: { type: Schema.Types.ObjectId, ref: 'validThrough' },
  validFrom: { type: Schema.Types.ObjectId, ref: 'validFrom' },
  sku: { type: Schema.Types.ObjectId, ref: 'sku' },
  serialNumber: { type: Schema.Types.ObjectId, ref: 'serialNumber' },
  seller: { type: Schema.Types.ObjectId, ref: 'seller' },
  reviews: { type: Schema.Types.ObjectId, ref: 'reviews' },
  review: { type: Schema.Types.ObjectId, ref: 'review' },
  priceValidUntil: { type: Schema.Types.ObjectId, ref: 'priceValidUntil' },
  priceSpecification: { type: Schema.Types.ObjectId, ref: 'priceSpecification' },
  priceCurrency: { type: Schema.Types.ObjectId, ref: 'priceCurrency' },
  price: { type: Schema.Types.ObjectId, ref: 'price' },
  mpn: { type: Schema.Types.ObjectId, ref: 'mpn' },
  itemOffered: { type: Schema.Types.ObjectId, ref: 'itemOffered' },
  itemCondition: { type: Schema.Types.ObjectId, ref: 'itemCondition' },
  inventoryLevel: { type: Schema.Types.ObjectId, ref: 'inventoryLevel' },
  includesObject: { type: Schema.Types.ObjectId, ref: 'includesObject' },
  gtin8: { type: Schema.Types.ObjectId, ref: 'gtin8' },
  gtin14: { type: Schema.Types.ObjectId, ref: 'gtin14' },
  gtin13: { type: Schema.Types.ObjectId, ref: 'gtin13' },
  eligibleTransactionVolume: { type: Schema.Types.ObjectId, ref: 'eligibleTransactionVolume' },
  eligibleRegion: { type: Schema.Types.ObjectId, ref: 'eligibleRegion' },
  eligibleQuantity: { type: Schema.Types.ObjectId, ref: 'eligibleQuantity' },
  eligibleDuration: { type: Schema.Types.ObjectId, ref: 'eligibleDuration' },
  eligibleCustomerType: { type: Schema.Types.ObjectId, ref: 'eligibleCustomerType' },
  deliveryLeadTime: { type: Schema.Types.ObjectId, ref: 'deliveryLeadTime' },
  category: { type: Schema.Types.ObjectId, ref: 'category' },
  businessFunction: { type: Schema.Types.ObjectId, ref: 'businessFunction' },
  availableDeliveryMethod: { type: Schema.Types.ObjectId, ref: 'availableDeliveryMethod' },
  availableAtOrFrom: { type: Schema.Types.ObjectId, ref: 'availableAtOrFrom' },
  availabilityStarts: { type: Schema.Types.ObjectId, ref: 'availabilityStarts' },
  availabilityEnds: { type: Schema.Types.ObjectId, ref: 'availabilityEnds' },
  availability: { type: Schema.Types.ObjectId, ref: 'availability' },
  aggregateRating: { type: Schema.Types.ObjectId, ref: 'aggregateRating' },
  advanceBookingRequirement: { type: Schema.Types.ObjectId, ref: 'advanceBookingRequirement' },
  addOn: { type: Schema.Types.ObjectId, ref: 'addOn' },
  acceptedPaymentMethod: { type: Schema.Types.ObjectId, ref: 'acceptedPaymentMethod' },
  url: { type: Schema.Types.ObjectId, ref: 'url' },
  sameAs: { type: Schema.Types.ObjectId, ref: 'sameAs' },
  name: { type: Schema.Types.ObjectId, ref: 'name' },
  image: { type: Schema.Types.ObjectId, ref: 'image' },
  description: { type: Schema.Types.ObjectId, ref: 'description' },
  alternateName: { type: Schema.Types.ObjectId, ref: 'alternateName' },
  additionalType: { type: Schema.Types.ObjectId, ref: 'additionalType' } });
module.exports = mongoose.model('AggregateOffer', schema);